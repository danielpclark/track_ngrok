#!/usr/bin/env ruby

LICENSE = <<-GPLv3
   Track ngrok - Keep updated port information sent to you
   Copyright (C) 2015 Daniel P. Clark

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program. If not, see <http://www.gnu.org/licenses/>.
GPLv3
#   ---------------------------------------------------------------------
#
# A command line tool that DMs you on twitter if your ngrok ports have changed.
# Some times the network/routers have an issue and port numbers change.  This
# will notify you via Twitter with the new information so you can still work
# remotely.
#
# Requires 'ngrok' and the gem 't' to be installed.  Twitter needs to be
# configured with 't authenticate' for this to work.  When you setup your Twitter
# app you will need to enable read/write/dm priveledges.
#
# This currently uses your web browser to check what ports are in use... don't
# close it or it won't work.  I'd tried with PTY and failed, and the web page
# requires Jevascript so Mechanize is out of the question.

puts LICENSE
puts

require 'optparse'

options = {ngrok:  '-proto=tcp 22', twitter: nil} # ports: nil

parser = OptionParser.new do|opts|
  opts.banner = "Usage: track_ngrok -t twitter_name [options]"
#  opts.on('-p', '--ports numbers', 'Comma seperated port numbers to track') do |ports|
#    options[:ports] = ports;
#  end

  opts.on('-n', '--ngrok parameters', 'Quoted parameters to give to ngrok') do |ngrok|
    options[:ngrok] = ngrok;
  end

  opts.on('-t', '--twitter @handle', 'Your twitter handle') do |twitter|
    options[:twitter] = twitter;
  end

  opts.on('-h', '--help', 'Displays Help') do
    puts opts
    exit
  end
end

parser.parse!

raise "You must define a Twitter handle to be DM'd!" unless options[:twitter]

expression = '(:\/\/ngrok.com:(\d*))'
records = Hash.new { |h, k| h[k] = [] }

require 'watir'
browser = Watir::Browser.new

fork { `ngrok #{options[:ngrok]}` }

while true
  sleep(60 * 1)
  browser.goto 'http://127.0.0.1:4040'
  ports = browser.text.scan(/#{expression}/).map {|i| i[-1]}
  unless records[:ports].sort == ports.sort
    records[:ports] = ports 
    `t dm #{options[:twitter]} "ngrok ports: #{ports.join(', ')}"`
  end
end

#require 'mechanize'
#
#while true
#  sleep(60 *3)
#  Mechanize.new do |m|
#
#  end
#end

#require 'pty'
#require 'expect'
#expression =  "(ngrok.com:(\\d*).*:(#{options[:ports].gsub(',','|')}))"
#begin
#  return unless options[:twitter] && options[:ports]
#  PTY.spawn("ngrok #{options[:ngrok]}") do |stdout, stdin, pid|
#    begin
#      while true
#        m = stdout.expect(/#{expression}/, 10)
#        if m
#          unless records[m[3]].include? m[2]
#            records[m[3]] << m[2]
#            `t dm #{options[:twitter]} "ngrok ports: #{records.to_s}"`
#          end
#        end
#      end
#    rescue Errno::EIO
#    end
#  end
#rescue PTY::ChildExited
#    puts "The child process exited!"
#end

